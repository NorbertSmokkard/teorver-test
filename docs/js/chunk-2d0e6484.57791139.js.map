{"version":3,"sources":["webpack:///./src/content/1.3-sochetania/theory/1.3-sochetania.theory.content.html","webpack:///./src/content/1.3-sochetania/theory/1.3-sochetania.theory.content.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","_v","staticStyle","attrs","_m","staticRenderFns","script","component"],"mappings":"yHAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACE,YAAY,UAAU,CAACF,EAAG,IAAI,CAACA,EAAG,IAAI,CAACJ,EAAIO,GAAG,iBAAiBP,EAAIO,GAAG,4PAA4PH,EAAG,KAAK,CAACI,YAAY,CAAC,kBAAkB,cAAc,CAACR,EAAIO,GAAG,0BAA0BP,EAAIO,GAAG,8FAA8FH,EAAG,MAAM,CAACK,MAAM,CAAC,IAAM,iBAAiB,IAAM,OAAO,GAAGT,EAAIU,GAAG,GAAGV,EAAIU,GAAG,GAAGV,EAAIU,GAAG,GAAGV,EAAIU,GAAG,MAClsBC,EAAkB,CAAC,WAAa,IAAIX,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,IAAI,CAACA,EAAG,IAAI,CAACJ,EAAIO,GAAG,iBAAiB,WAAa,IAAIP,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,IAAI,CAACJ,EAAIO,GAAG,4EAA4EH,EAAG,MAAMA,EAAG,IAAI,CAACJ,EAAIO,GAAG,aAAaH,EAAG,MAAMJ,EAAIO,GAAG,kZAAkZH,EAAG,MAAM,CAACK,MAAM,CAAC,IAAM,iBAAiB,IAAM,MAAML,EAAG,MAAMA,EAAG,IAAI,CAACJ,EAAIO,GAAG,aAAaP,EAAIO,GAAG,oBAAoBH,EAAG,MAAMA,EAAG,MAAMJ,EAAIO,GAAG,aAAaH,EAAG,MAAM,CAACK,MAAM,CAAC,IAAM,iBAAiB,IAAM,MAAMT,EAAIO,GAAG,mLAAmLH,EAAG,MAAM,CAACK,MAAM,CAAC,IAAM,iBAAiB,IAAM,MAAMT,EAAIO,GAAG,wCAAwCH,EAAG,MAAMA,EAAG,MAAM,CAACK,MAAM,CAAC,IAAM,iBAAiB,IAAM,MAAMT,EAAIO,GAAG,8DAA8DH,EAAG,MAAMA,EAAG,MAAM,CAACK,MAAM,CAAC,IAAM,iBAAiB,IAAM,MAAMT,EAAIO,GAAG,yDAAyDH,EAAG,MAAMA,EAAG,MAAM,CAACK,MAAM,CAAC,IAAM,iBAAiB,IAAM,MAAMT,EAAIO,GAAG,sFAAsFH,EAAG,MAAMA,EAAG,MAAM,CAACK,MAAM,CAAC,IAAM,iBAAiB,IAAM,MAAMT,EAAIO,GAAG,+DAA+DH,EAAG,MAAMA,EAAG,IAAI,CAACJ,EAAIO,GAAG,mFAAmFP,EAAIO,GAAG,wGAAwG,WAAa,IAAIP,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,IAAI,CAACA,EAAG,IAAI,CAACJ,EAAIO,GAAG,iBAAiB,WAAa,IAAIP,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,IAAI,CAACJ,EAAIO,GAAG,mCAAmCH,EAAG,IAAI,CAACJ,EAAIO,GAAG,OAAOP,EAAIO,GAAG,8FAA8FH,EAAG,MAAMA,EAAG,IAAI,CAACJ,EAAIO,GAAG,aAAaH,EAAG,MAAMJ,EAAIO,GAAG,2EAA2EH,EAAG,IAAI,CAACJ,EAAIO,GAAG,WAAWP,EAAIO,GAAG,oQAAoQH,EAAG,MAAM,CAACK,MAAM,CAAC,IAAM,iBAAiB,IAAM,MAAML,EAAG,MAAMJ,EAAIO,GAAG,qJAAqJH,EAAG,MAAM,CAACK,MAAM,CAAC,IAAM,kBAAkB,IAAM,MAAMT,EAAIO,GAAG,8FAA8FH,EAAG,MAAMJ,EAAIO,GAAG,0J,YCAvoGK,EAAS,GAKTC,EAAY,eACdD,EACAb,EACAY,GACA,EACA,KACA,KACA,MAIa,aAAAE,E","file":"js/chunk-2d0e6484.57791139.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"theory\"},[_c('p',[_c('i',[_vm._v(\"Сочетаниями\")]),_vm._v(\" называют различные комбинации из m объектов, которые выбраны из множества n различных объектов, и которые отличаются друг от друга хотя бы одним объектом. Иными словами, отдельно взятое сочетание – это уникальная выборка из m элементов, в которой \"),_c('el',{staticStyle:{\"text-decoration\":\"underline\"}},[_vm._v(\" не важен их порядок\")]),_vm._v(\" (расположение). Общее же количество таких уникальных сочетаний рассчитывается по формуле \"),_c('img',{attrs:{\"src\":\"/img/1.1/1.gif\",\"alt\":\"\"}})],1),_vm._m(0),_vm._m(1),_vm._m(2),_vm._m(3)])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('b',[_vm._v(\"Пример 1\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\" В ящике находится 15 деталей. Сколькими способами можно взять 4 детали?\"),_c('br'),_c('b',[_vm._v(\"Решение\")]),_c('br'),_vm._v(\" Важно отметить, что по логике условия, детали считаются различными – даже если они на самом деле однотипны и визуально одинаковы (в этом случае их можно, например, пронумеровать). В задаче речь идёт о выборке из 4 деталей, в которой не имеет значения их «дальнейшая судьба» – грубо говоря, «просто выбрали 4 штуки и всё». Таким образом, у нас имеют место сочетания деталей. Считаем их количество: \"),_c('img',{attrs:{\"src\":\"/img/1.1/2.gif\",\"alt\":\"\"}}),_c('br'),_c('b',[_vm._v(\" Ответ:\")]),_vm._v(\" 1365 способами \"),_c('br'),_c('br'),_vm._v(\" Формуле \"),_c('img',{attrs:{\"src\":\"/img/1.1/1.gif\",\"alt\":\"\"}}),_vm._v(\" необходимо уделить самое пристальное внимание, поскольку она является «хитом» комбинаторики. При этом полезно ПОНИМАТЬ и без всяких вычислений записывать «крайние» значения: \"),_c('img',{attrs:{\"src\":\"/img/1.1/3.gif\",\"alt\":\"\"}}),_vm._v(\" Применительно к разобранной задаче:\"),_c('br'),_c('img',{attrs:{\"src\":\"/img/1.1/4.gif\",\"alt\":\"\"}}),_vm._v(\" – единственным способом можно не выбрать ни одной детали;\"),_c('br'),_c('img',{attrs:{\"src\":\"/img/1.1/5.gif\",\"alt\":\"\"}}),_vm._v(\"способами можно взять 1 деталь (любую из пятнадцати);\"),_c('br'),_c('img',{attrs:{\"src\":\"/img/1.1/6.gif\",\"alt\":\"\"}}),_vm._v(\"способами можно взять 14 деталей (при этом какая-то одна из 15 останется в ящике);\"),_c('br'),_c('img',{attrs:{\"src\":\"/img/1.1/7.gif\",\"alt\":\"\"}}),_vm._v(\"– единственным способом можно взять все пятнадцать деталей.\"),_c('br'),_c('b',[_vm._v(\"Рекомендую внимательно ознакомиться с биномом Ньютона и треугольником Паскаля\")]),_vm._v(\", по которому, к слову, очень удобно выполнять проверку вычислений при небольших значениях «эн». \")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('b',[_vm._v(\"Пример 2\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\" В шахматном турнире участвует \"),_c('i',[_vm._v(\"k\")]),_vm._v(\" человек и каждый с каждым играет по одной партии. Сколько всего партий сыграно в турнире?\"),_c('br'),_c('b',[_vm._v(\"Решение\")]),_c('br'),_vm._v(\" Для решения данной задачи сориентируемся по турнирной таблице размером\"),_c('i',[_vm._v(\" k*k \")]),_vm._v(\" клеток, в которой результат каждой партии учитывается дважды и, кроме того, затушёвываются клетки «главной диагонали» (т.к. участники не играют сами с собой). Исходя из проведённых рассуждений, общее количество сыгранных партий рассчитывается по формуле: \"),_c('img',{attrs:{\"src\":\"/img/1.1/9.gif\",\"alt\":\"\"}}),_c('br'),_vm._v(\" Такое решение является полностью корректным, однако в данном случае также можно руководствоваться самыми что ни на есть банальными сочетаниями: \"),_c('img',{attrs:{\"src\":\"/img/1.1/10.gif\",\"alt\":\"\"}}),_vm._v(\" различных пар можно составить из соперников (кто играет белыми, кто чёрными – не важно). \"),_c('br'),_vm._v(\" Эквивалентной является задача о рукопожатиях: в отделе работает мужчин и каждый с каждым здоровается за руку, сколько рукопожатий они совершают? \")])}]\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./1.3-sochetania.theory.content.html?vue&type=template&id=6408f3da&\"\nvar script = {}\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}